# macros.conf

# For Splunk 7.3.x and later, you might want to include include_reduced_buckets=t
[tstats]
definition = tstats
iseval = 0

# Data source availability default monitored state
# customize this macro to change the way the monitored state is defined by default, such as conditional operations
# using the index or sourcetype naming convention

# used as the top of the populating searches for event indexes
[trackme_tstats_main_filter]
definition = sourcetype!="stash" sourcetype!="*too_small"
iseval = 0

# used as the top of the populating searches for metric indexes
[trackme_mstats_main_filter]
definition = metric_name="*"
iseval = 0

[trackme_default_monitored_state]
definition = eval data_monitored_state=if(isnull(data_monitored_state), "enabled", data_monitored_state)
iseval = 0

[trackme_default_host_monitored_state]
definition = eval data_monitored_state=if(isnull(data_monitored_state), "enabled", data_monitored_state)
iseval = 0

[trackme_default_metric_host_monitored_state]
definition = eval metric_monitored_state=if(isnull(metric_monitored_state), "enabled", metric_monitored_state)
iseval = 0

[trackme_default_lag]
definition = eval data_max_lag_allowed=if(isnull(data_max_lag_allowed), "3600", data_max_lag_allowed)
iseval = 0

[trackme_default_host_lag]
definition = eval data_max_lag_allowed=if(isnull(data_max_lag_allowed), "86400", data_max_lag_allowed)
iseval = 0

[trackme_default_metric_host_lag]
definition = eval metric_max_lag_allowed=if(isnull(metric_max_lag_allowed), "300", metric_max_lag_allowed)
iseval = 0

[trackme_default_monitored_wdays]
definition = eval data_monitoring_wdays=if(isnull(data_monitoring_wdays), "auto:all_days", data_monitoring_wdays)
iseval = 0

[trackme_default_host_monitored_wdays]
definition = eval data_monitoring_wdays=if(isnull(data_monitoring_wdays), "auto:all_days", data_monitoring_wdays)
iseval = 0

[trackme_default_metric_host_monitored_wdays]
definition = eval metric_monitoring_wdays=if(isnull(metric_monitoring_wdays), "auto:all_days", metric_monitoring_wdays)
iseval = 0

# can be customized for filtering
[trackme_data_sources_filtering]
definition = search data_name=*
iseval = 0

# can be customized for date format
[trackme_date_format(1)]
args = input_field
definition = eval "$input_field$ (translated)"=strftime($input_field$, "%d/%m/%Y %H:%M")
iseval = 0

# defined pattern filter for indexers
[trackme_idx_filter]
definition = host=idx*
iseval = 0

# Evaluate the icon fields rendering
[trackme_eval_icons]
definition = eval state = "icon|" + case(data_source_state=="green", "ico_good ico_small|icon-check|Up: data source is available and marked as green due to monitoring condition being met", data_source_state=="red", "ico_error ico_small|icon-close|Down: data source is not available or marked as down due to rules monitoring", data_source_state=="orange", "ico_warn ico_small|icon-close|Warn: data source is not available but marked as warn due to week days monitoring rules"),\
monitoring = "icon|" + if(data_monitored_state=="enabled", "ico_good ico_small|icon-check|Enabled: data source is being actively monitored", "ico_error ico_small|icon-close|Disabled: data source monitoring is disabled")
iseval = 0

[trackme_eval_icons_host]
definition = eval state = "icon|" + case(data_host_state=="green", "ico_good ico_small|icon-check|Up: data source is available and marked as green due to monitoring condition being met", data_host_state=="red", "ico_error ico_small|icon-close|Down: data source is not available or marked as down due to rules monitoring", data_source_state=="orange", "ico_warn ico_small|icon-close|Warn: data source is not available but marked as warn due to week days monitoring rules"),\
monitoring = "icon|" + if(data_monitored_state=="enabled", "ico_good ico_small|icon-check|Enabled: data source is being actively monitored", "ico_error ico_small|icon-close|Disabled: data source monitoring is disabled")
iseval = 0

[trackme_eval_icons_metric_host]
definition = eval state = "icon|" + case(metric_host_state=="green", "ico_good ico_small|icon-check|Up: metric host source is available and marked as green due to monitoring condition being met", data_host_state=="red", "ico_error ico_small|icon-close|Down: data source is not available or marked as down due to rules monitoring", data_source_state=="orange", "ico_warn ico_small|icon-close|Warn: metric host is not available but marked as warn due to week days monitoring rules"),\
monitoring = "icon|" + if(metric_monitored_state=="enabled", "ico_good ico_small|icon-check|Enabled: metric host is being actively monitored", "ico_error ico_small|icon-close|Disabled: metric host monitoring is disabled")
iseval = 0

[trackme_eval_icons_flip]
definition = eval object_previous_state = "icon|" + case(object_previous_state=="green", "ico_good ico_small|icon-check|Up: data source is available and marked as green due to monitoring condition being met", object_previous_state=="red", "ico_error ico_small|icon-close|Down: data source is not available or marked as down due to rules monitoring", object_previous_state=="orange", "ico_warn ico_small|icon-close|Warn: data source is not available but marked as warn due to week days monitoring rules"),\
object_state = "icon|" + case(object_state=="green", "ico_good ico_small|icon-check|Up: data source is available and marked as green due to monitoring condition being met", object_state=="red", "ico_error ico_small|icon-close|Down: data source is not available or marked as down due to rules monitoring", object_state=="orange", "ico_warn ico_small|icon-close|Warn: data source is not available but marked as warn due to week days monitoring rules")
iseval = 0

# Evaluate the data source status
[trackme_eval_data_source_state]
definition = eval data_source_state=case(data_monitoring_level="index", if(data_last_lag_seen_idx>data_max_lag_allowed, "red", "green"),\
data_monitoring_level="sourcetype", if(data_last_lag_seen>data_max_lag_allowed, "red", "green"))\
| eval current_wday=strftime(now(), "%a")\
| eval current_wday_no=strftime(now(), "%w")\
| eval data_source_state=if(match(data_monitoring_wdays, "^(auto|manual):all_days") AND match(current_wday, ".*") AND data_source_state="red", "red", data_source_state)\
| eval data_source_state=if(match(data_monitoring_wdays, "^(auto|manual):monday-to-friday") AND match(current_wday, "Sat|Sun") AND data_source_state="red", "orange", data_source_state)\
| eval data_source_state=if(match(data_monitoring_wdays, "^(auto|manual):monday-to-saturday") AND match(current_wday, "Sun") AND data_source_state="red", "orange", data_source_state)\
| rex field=data_monitoring_wdays "^(manual|auto)\:(?<data_monitoring_wdays_no>\d.*)"\
| makemv delim="," data_monitoring_wdays_no\
| eval data_source_state=if(isnotnull(data_monitoring_wdays_no) AND current_wday_no!=data_monitoring_wdays_no AND data_source_state="red", "orange", data_source_state)\
| fields - current_*, data_monitoring_wdays_no

# Evaluate the host status
[trackme_eval_data_host_state]
definition = eval data_host_state=if(data_last_lag_seen>data_max_lag_allowed, "red", "green")\
| eval current_wday=strftime(now(), "%a")\
| eval current_wday_no=strftime(now(), "%w")\
| eval data_host_state=if(match(data_monitoring_wdays, "^(auto|manual):all_days") AND match(current_wday, ".*") AND data_host_state="red", "red", data_host_state)\
| eval data_host_state=if(match(data_monitoring_wdays, "^(auto|manual):monday-to-friday") AND match(current_wday, "Sat|Sun") AND data_host_state="red", "orange", data_host_state)\
| eval data_host_state=if(match(data_monitoring_wdays, "^(auto|manual):monday-to-saturday") AND match(current_wday, "Sun") AND data_host_state="red", "orange", data_host_state)\
| rex field=data_monitoring_wdays "^(manual|auto)\:(?<data_monitoring_wdays_no>\d.*)"\
| makemv delim="," data_monitoring_wdays_no\
| eval data_host_state=if(isnotnull(data_monitoring_wdays_no) AND current_wday_no!=data_monitoring_wdays_no AND data_host_state="red", "orange", data_host_state)\
| fields - current_*, data_monitoring_wdays_no

# Evaluate the metric host status
[trackme_eval_metric_host_state]
definition = eval metric_host_state=if(match(metric_details, "metric_host_state=red"), "red", "green")

# Blacklist exclusions
[apply_data_source_blacklists_data_retrieve]
definition = NOT [ | inputlookup trackme_data_source_monitoring_blacklist_host | rename data_host as host | table host ] NOT [ | inputlookup trackme_data_source_monitoring_blacklist_index | rename data_index as index | table index ] NOT [ | inputlookup trackme_data_source_monitoring_blacklist_sourcetype | rename data_sourcetype as sourcetype | table sourcetype ]
iseval = 0

[apply_data_host_blacklists_data_retrieve]
definition = NOT [ | inputlookup trackme_data_host_monitoring_blacklist_host | rename data_host as host | table host ] NOT [ | inputlookup trackme_data_host_monitoring_blacklist_index | rename data_index as index | table index ] NOT [ | inputlookup trackme_data_host_monitoring_blacklist_sourcetype | rename data_sourcetype as sourcetype | table sourcetype ]
iseval = 0

[apply_metric_host_blacklists_data_retrieve]
definition = NOT [ | inputlookup trackme_metric_host_monitoring_blacklist_host | rename metric_host as host | table host ] NOT [ | inputlookup trackme_metric_host_monitoring_blacklist_index | rename metric_index as index | table index ]
iseval = 0

[apply_data_source_blacklists]
definition = search NOT [ | inputlookup trackme_data_source_monitoring_blacklist_index | table data_index ] NOT [ | inputlookup trackme_data_source_monitoring_blacklist_sourcetype | table data_sourcetype ]
iseval = 0

[apply_data_host_blacklists]
definition = search NOT [ | inputlookup trackme_data_host_monitoring_blacklist_host | table data_host ] NOT [ | inputlookup trackme_data_host_monitoring_blacklist_index | table data_index ] NOT [ | inputlookup trackme_data_host_monitoring_blacklist_sourcetype | table data_sourcetype ]
iseval = 0

[apply_metric_host_blacklists]
definition = search NOT [ | inputlookup trackme_metric_host_monitoring_blacklist_host | table metric_host ] NOT [ | inputlookup trackme_metric_host_monitoring_blacklist_index | table metric_index ]
iseval = 0

# Default retention for audit changes, in relative time format.
# Default is 90d
[trackme_audit_changes_retention]
definition =  where _time>relative_time(now(), "-90d")
iseval = 0

# Default retention for flip states, in relative time format.
# Default is 90d
[trackme_flip_state_retention]
definition =  where _time>relative_time(now(), "-90d")
iseval = 0
